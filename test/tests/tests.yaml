main: {"args": ["--input-type=python", "--include-file=include.$shell"], "definition_file": "crazy-complete-test"}
when: {"args": ["--input-type=yaml"], "definition_file": "when-test.yaml"}
groups: {"args": ["--input-type=yaml"], "definition_file": "groups-test.yaml"}
combine: {"args": ["--input-type=yaml"], "definition_file": "combine-test.yaml"}
inherit-on: {"args": ["--input-type=yaml", "--inherit-options=True"], "definition_file": "inherit-options.yaml"}
inherit-off: {"args": ["--input-type=yaml", "--inherit-options=False"], "definition_file": "inherit-options.yaml"}
---
number: 1
definition_file: "main"
description: "No arguments, check if all commands are listed"
send: "crazy-complete-test "
bash_expected: |
  > crazy-complete-test
  alias1            argparse-actions  subcommand        when
  alias2            complete          test
  > crazy-complete-test
fish_expected: |
  > crazy-complete-test
  alias1        (For testing the completer)  subcommand  (Test nested subcommands)
  alias2        (For testing the completer)  test      (For testing the completer)
  argparse-actions  (argparse tool actions)  when        (Test the "when"-feature)
  complete         (Test complete commands)
zsh_expected: |
  > crazy-complete-test
  alias2            alias1  test  -- For testing the completer
  argparse-actions                -- argparse tool actions
  complete                        -- Test complete commands
  subcommand                      -- Test nested subcommands
  when                            -- Test the "when"-feature
---
number: 2
definition_file: "main"
description: "Check if subcommand is completed"
send: "crazy-complete-test t"
bash_expected: |
  > crazy-complete-test test
fish_expected: |
  > crazy-complete-test test
zsh_expected: |
  > crazy-complete-test test
---
number: 3
definition_file: "main"
description: "Check if all options are listed"
send: "crazy-complete-test test -"
bash_expected: |
  > crazy-complete-test test -
  --arg=                           --special-chars-in-description=
  --exclusive-1                    -A
  --exclusive-2                    -F
  --flag                           -O
  --help                           -arg=
  --optional=                      -flag
  --repeatable-arg=                -h
  --repeatable-flag                -optional=
  > crazy-complete-test test -
fish_expected: |
  > crazy-complete-test test -
  -A  -arg  --arg                                        (Option with arg)
  -F  -flag  --flag                                        (A option flag)
  -h  --help                             (show this help message and exit)
  -O  -optional  --optional  --optional=        (Option with optional arg)
  --exclusive-1
  --exclusive-2
  --repeatable-arg
  --repeatable-flag
  --special-chars-in-description  (Here are some special chars: $"'\[]*`))
zsh_expected: |
  > crazy-complete-test test -
  --exclusive-1      --exclusive-2      --repeatable-arg   --repeatable-flag
  --arg
  -arg                            -A  -- Option with arg
  --flag
  -flag                           -F  -- A option flag
  --help                          -h  -- show this help message and exit
  --optional
  -optional                       -O  -- Option with optional arg
  --special-chars-in-description      -- Here are some special chars: $"'\[]*`)
---
number: 4
definition_file: "main"
description: "Check long option with argument (with space)"
send: "crazy-complete-test test --arg "
bash_expected: |
  > crazy-complete-test test --arg
  1  2  3
  > crazy-complete-test test --arg
fish_expected: |
  > crazy-complete-test test --arg
  1  (Option with arg)  2  (Option with arg)  3  (Option with arg)
zsh_expected: |
  > crazy-complete-test test --arg
  1  2  3
---
number: 5
definition_file: "main"
description: "Check long option with argument (with equal sign)"
send: "crazy-complete-test test --arg="
bash_expected: |
  > crazy-complete-test test --arg=
  1  2  3
  > crazy-complete-test test --arg=
fish_expected: |
  > crazy-complete-test test --arg=
  --arg=1  (Option with arg)  --arg=3  (Option with arg)
  --arg=2  (Option with arg)
zsh_expected: |
  > crazy-complete-test test --arg=
  1  2  3
---
number: 6
definition_file: "main"
description: "Check short option with argument (without space)"
send: "crazy-complete-test test -A"
bash_expected: |
  > crazy-complete-test test -A
  -A1  -A2  -A3
  > crazy-complete-test test -A
fish_expected: |
  > crazy-complete-test test -A
  -A1  (Option with arg)  -A2  (Option with arg)  -A3  (Option with arg)
zsh_expected: |
  > crazy-complete-test test -A
  1  2  3
---
number: 7
definition_file: "main"
description: "Check short option with argument (with space)"
send: "crazy-complete-test test -A "
bash_expected: |
  > crazy-complete-test test -A
  1  2  3
  > crazy-complete-test test -A
fish_expected: |
  > crazy-complete-test test -A
  1  (Option with arg)  2  (Option with arg)  3  (Option with arg)
zsh_expected: |
  > crazy-complete-test test -A
  1  2  3
---
number: 8
definition_file: "main"
description: "Check old-style option with argument (with space)"
send: "crazy-complete-test test -arg "
bash_expected: |
  > crazy-complete-test test -arg
  1  2  3
  > crazy-complete-test test -arg
fish_expected: |
  > crazy-complete-test test -arg
  1  (Option with arg)  2  (Option with arg)  3  (Option with arg)
zsh_expected: |
  > crazy-complete-test test -arg
  1  2  3
---
number: 9
definition_file: "main"
description: "Check old-style option with argument (with equal sign)"
send: "crazy-complete-test test -arg="
bash_expected: |
  > crazy-complete-test test -arg=
  1  2  3
  > crazy-complete-test test -arg=
fish_expected: |
  > crazy-complete-test test -arg=
  -arg=1  (Option with arg)  -arg=2  (Option with arg)  -arg=3  (Option with arg)
zsh_expected: |
  > crazy-complete-test test -arg=
  1  2  3
---
number: 10
definition_file: "main"
description: "Check long option with optional argument"
send: "crazy-complete-test test --optional="
bash_expected: |
  > crazy-complete-test test --optional=
  1  2  3
  > crazy-complete-test test --optional=
fish_expected: |
  > crazy-complete-test test --optional=
  …optional=1  (Option with optional arg)  …optional=3  (Option with optional arg)
  …optional=2  (Option with optional arg)
zsh_expected: |
  > crazy-complete-test test --optional=
  1  2  3
---
number: 11
definition_file: "main"
description: "Check short option with optional argument"
comment: "FISH has a slightly wrong output"
send: "crazy-complete-test test -O"
bash_expected: |
  > crazy-complete-test test -O
  -O1  -O2  -O3
  > crazy-complete-test test -O
fish_expected: |
  > crazy-complete-test test -O
  -O1  (Option with optional arg)  -OA                  (Option with arg)
  -O2  (Option with optional arg)  -OF                    (A option flag)
  -O3  (Option with optional arg)  -Oh  (show this help message and exit)
zsh_expected: |
  > crazy-complete-test test -O
  1  2  3
---
number: 12
definition_file: "main"
description: "Check old-style option with optional argument"
send: "crazy-complete-test test -optional="
bash_expected: |
  > crazy-complete-test test -optional=
  1  2  3
  > crazy-complete-test test -optional=
fish_expected: |
  > crazy-complete-test test -optional=
  …optional=1  (Option with optional arg)  …optional=3  (Option with optional arg)
  …optional=2  (Option with optional arg)
zsh_expected: |
  > crazy-complete-test test -optional=
  1  2  3
---
number: 13
definition_file: "main"
description: "Check if mutually exclusive options work"
send: "crazy-complete-test test --exclusive-1 --exclusive"
bash_expected: |
  > crazy-complete-test test --exclusive-1 --exclusive
fish_expected: |
  > crazy-complete-test test --exclusive-1 --exclusive
zsh_expected: |
  > crazy-complete-test test --exclusive-1 --exclusive
---
number: 14
definition_file: "main"
description: "Check if repeatable options work"
send: "crazy-complete-test test --repeatable-flag --repeatable-"
bash_expected: |
  > crazy-complete-test test --repeatable-flag --repeatable-
  --repeatable-arg=  --repeatable-flag
  > crazy-complete-test test --repeatable-flag --repeatable-
fish_expected: |
  > crazy-complete-test test --repeatable-flag --repeatable-
  …peatable-arg  …peatable-flag
zsh_expected: |
  > crazy-complete-test test --repeatable-flag --repeatable-
  --repeatable-arg   --repeatable-flag
---
number: 15
definition_file: "main"
description: "Check if final options work"
send: "crazy-complete-test test --help -"
bash_expected: |
  > crazy-complete-test test --help -
fish_expected: |
  > crazy-complete-test test --help -
zsh_expected: |
  > crazy-complete-test test --help -
---
number: 16
definition_file: "main"
description: "Check if hidden options work (short option) #1"
send: "crazy-complete-test test -H"
bash_expected: |
  > crazy-complete-test test -H
  -H1  -H2  -H3
  > crazy-complete-test test -H
fish_expected: |
  > crazy-complete-test test -H
  -H1  -H2  -H3
zsh_expected: |
  > crazy-complete-test test -H
  1  2  3
---
number: 17
definition_file: "main"
description: "Check if hidden options work (short option) #2"
send: "crazy-complete-test test -H "
bash_expected: |
  > crazy-complete-test test -H
  1  2  3
  > crazy-complete-test test -H
fish_expected: |
  > crazy-complete-test test -H
  1  2  3
zsh_expected: |
  > crazy-complete-test test -H
  1  2  3
---
number: 18
definition_file: "main"
description: "Check if hidden options work (short option, stacked) #1"
send: "crazy-complete-test test -FH"
bash_expected: |
  > crazy-complete-test test -FH
  -FH1  -FH2  -FH3
  > crazy-complete-test test -FH
fish_expected: |
  > crazy-complete-test test -FH
  -FH1  -FH2  -FH3
zsh_expected: |
  > crazy-complete-test test -FH
  1  2  3
---
number: 19
definition_file: "main"
description: "Check if hidden options work (short option, stacked) #2"
send: "crazy-complete-test test -FH "
bash_expected: |
  > crazy-complete-test test -FH
  1  2  3
  > crazy-complete-test test -FH
fish_expected: |
  > crazy-complete-test test -FH
  1  2  3
zsh_expected: |
  > crazy-complete-test test -FH
  1  2  3
---
number: 20
definition_file: "main"
description: "Check if hidden options work (long option) #1"
send: "crazy-complete-test test --hidden "
bash_expected: |
  > crazy-complete-test test --hidden
  1  2  3
  > crazy-complete-test test --hidden
fish_expected: |
  > crazy-complete-test test --hidden
  1  2  3
zsh_expected: |
  > crazy-complete-test test --hidden
  1  2  3
---
number: 21
definition_file: "main"
description: "Check if hidden options work (long option) #2"
send: "crazy-complete-test test --hidden="
bash_expected: |
  > crazy-complete-test test --hidden=
  1  2  3
  > crazy-complete-test test --hidden=
fish_expected: |
  > crazy-complete-test test --hidden=
  --hidden=1  --hidden=2  --hidden=3
zsh_expected: |
  > crazy-complete-test test --hidden=
  1  2  3
---
number: 22
definition_file: "main"
description: "Check if hidden options work (old option) #1"
send: "crazy-complete-test test -hidden "
bash_expected: |
  > crazy-complete-test test -hidden
  1  2  3
  > crazy-complete-test test -hidden
fish_expected: |
  > crazy-complete-test test -hidden
  1  2  3
zsh_expected: |
  > crazy-complete-test test -hidden
  1  2  3
---
number: 23
definition_file: "main"
description: "Check if hidden options work (old option) #2"
send: "crazy-complete-test test -hidden="
bash_expected: |
  > crazy-complete-test test -hidden=
  1  2  3
  > crazy-complete-test test -hidden=
fish_expected: |
  > crazy-complete-test test -hidden=
  -hidden=1  -hidden=2  -hidden=3
zsh_expected: |
  > crazy-complete-test test -hidden=
  1  2  3
---
number: 24
definition_file: "main"
description: "Check option stacking"
comment: "Does not work for BASH yet"
send: "crazy-complete-test test -F"
bash_expected: |
  > crazy-complete-test test -F
fish_expected: |
  > crazy-complete-test test -F
  -FA                  (Option with arg)  -FO  (Option with optional arg)
  -Fh  (show this help message and exit)
zsh_expected: |
  > crazy-complete-test test -F
  -A  -- Option with arg
  -O  -- Option with optional arg
  -h  -- show this help message and exit
---
number: 25
definition_file: "main"
description: "Check option stacking (with required argument and no space)"
send: "crazy-complete-test test -FA"
bash_expected: |
  > crazy-complete-test test -FA
  -FA1  -FA2  -FA3
  > crazy-complete-test test -FA
fish_expected: |
  > crazy-complete-test test -FA
  -FA1  (Option with arg)  -FA2  (Option with arg)  -FA3  (Option with arg)
zsh_expected: |
  > crazy-complete-test test -FA
  1  2  3
---
number: 26
definition_file: "main"
description: "Check option stacking (with required argument and space)"
send: "crazy-complete-test test -FA "
bash_expected: |
  > crazy-complete-test test -FA
  1  2  3
  > crazy-complete-test test -FA
fish_expected: |
  > crazy-complete-test test -FA
  1  (Option with arg)  2  (Option with arg)  3  (Option with arg)
zsh_expected: |
  > crazy-complete-test test -FA
  1  2  3
---
number: 27
definition_file: "main"
description: "Check option stacking (with optional argument)"
comment: "FISH produces a bit of a wrong output"
send: "crazy-complete-test test -FO"
bash_expected: |
  > crazy-complete-test test -FO
  -FO1  -FO2  -FO3
  > crazy-complete-test test -FO
fish_expected: |
  > crazy-complete-test test -FO
  -FO1  (Option with optional arg)  -FOA                  (Option with arg)
  -FO2  (Option with optional arg)  -FOh  (show this help message and exit)
  -FO3  (Option with optional arg)
zsh_expected: |
  > crazy-complete-test test -FO
  1  2  3
---
number: 28
definition_file: "main"
description: "when: Check if none of --if-* options are listed"
send: "crazy-complete-test when -"
bash_expected: |
  > crazy-complete-test when -
  --help       --var=       -V           -optional=
  --optional=  -O           -h           -var=
  > crazy-complete-test when -
fish_expected: |
  > crazy-complete-test when -
  -h  --help                       (show this help message and exit)
  -O  -optional  -V  -var  --optional  --var  (Conditional variable)
zsh_expected: |
  > crazy-complete-test when -
  --help      -h                   -- show this help message and exit
  --optional  --var  -var  -O  -V
  -optional                        -- Conditional variable
---
number: 29
definition_file: "main"
description: "when: Check if --if-var appears (with --var)"
send: "crazy-complete-test when --var value --if-"
bash_expected: |
  > crazy-complete-test when --var value --if-var=
fish_expected: |
  > crazy-complete-test when --var value --if-var
zsh_expected: |
  > crazy-complete-test when --var value --if-var=
---
number: 30
definition_file: "main"
description: "when: Check if --if-var appears (with -V)"
send: "crazy-complete-test when -V value --if-"
bash_expected: |
  > crazy-complete-test when -V value --if-var=
fish_expected: |
  > crazy-complete-test when -V value --if-var
zsh_expected: |
  > crazy-complete-test when -V value --if-var=
---
number: 31
definition_file: "main"
description: "when: Check if --if-var appears (with -var)"
send: "crazy-complete-test when -var value --if-"
bash_expected: |
  > crazy-complete-test when -var value --if-var=
fish_expected: |
  > crazy-complete-test when -var value --if-var
zsh_expected: |
  > crazy-complete-test when -var value --if-var=
---
number: 32
definition_file: "main"
description: "when: Check if --if-var and --if-var-is-foo appears (with -V foo)"
send: "crazy-complete-test when -V foo --if-"
bash_expected: |
  > crazy-complete-test when -V foo --if-
  --if-var-is-foo=  --if-var=
  > crazy-complete-test when -V foo --if-var
fish_expected: |
  > crazy-complete-test when -V foo --if-var
  --if-var              (Only show option if --var is given)
  --if-var-is-foo  (Only show option if --var is foo or bar)
zsh_tabs: 2
zsh_expected: |
  > crazy-complete-test when -V foo --if-var
  --if-var         -- Only show option if --var is given
  --if-var-is-foo  -- Only show option if --var is foo or bar
---
number: 33
definition_file: "main"
description: "when: Check if --if-var and --if-var-is-foo appears (with -Vfoo)"
send: "crazy-complete-test when -Vfoo --if-"
bash_expected: |
  > crazy-complete-test when -Vfoo --if-
  --if-var-is-foo=  --if-var=
  > crazy-complete-test when -Vfoo --if-var
fish_expected: |
  > crazy-complete-test when -Vfoo --if-var
  --if-var              (Only show option if --var is given)
  --if-var-is-foo  (Only show option if --var is foo or bar)
zsh_tabs: 2
zsh_expected: |
  > crazy-complete-test when -Vfoo --if-var
  --if-var         -- Only show option if --var is given
  --if-var-is-foo  -- Only show option if --var is foo or bar
---
number: 34
definition_file: "main"
description: "when: Check if --if-var and --if-var-is-foo appears (with --var foo)"
send: "crazy-complete-test when --var foo --if-"
bash_expected: |
  > crazy-complete-test when --var foo --if-
  --if-var-is-foo=  --if-var=
  > crazy-complete-test when --var foo --if-var
fish_expected: |
  > crazy-complete-test when --var foo --if-var
  --if-var              (Only show option if --var is given)
  --if-var-is-foo  (Only show option if --var is foo or bar)
zsh_tabs: 2
zsh_expected: |
  > crazy-complete-test when --var foo --if-var
  --if-var         -- Only show option if --var is given
  --if-var-is-foo  -- Only show option if --var is foo or bar
---
number: 35
definition_file: "main"
description: "when: Check if --if-var and --if-var-is-foo appears (with --var=foo)"
send: "crazy-complete-test when --var=foo --if-"
bash_expected: |
  > crazy-complete-test when --var=foo --if-
  --if-var-is-foo=  --if-var=
  > crazy-complete-test when --var=foo --if-var
fish_expected: |
  > crazy-complete-test when --var=foo --if-var
  --if-var              (Only show option if --var is given)
  --if-var-is-foo  (Only show option if --var is foo or bar)
zsh_tabs: 2
zsh_expected: |
  > crazy-complete-test when --var=foo --if-var
  --if-var         -- Only show option if --var is given
  --if-var-is-foo  -- Only show option if --var is foo or bar
---
number: 36
definition_file: "main"
description: "when: Check if --if-var and --if-var-is-foo appears (with -var foo)"
send: "crazy-complete-test when -var foo --if-"
bash_expected: |
  > crazy-complete-test when -var foo --if-
  --if-var-is-foo=  --if-var=
  > crazy-complete-test when -var foo --if-var
fish_expected: |
  > crazy-complete-test when -var foo --if-var
  --if-var              (Only show option if --var is given)
  --if-var-is-foo  (Only show option if --var is foo or bar)
zsh_tabs: 2
zsh_expected: |
  > crazy-complete-test when -var foo --if-var
  --if-var         -- Only show option if --var is given
  --if-var-is-foo  -- Only show option if --var is foo or bar
---
number: 37
definition_file: "main"
description: "when: Check if --if-var and --if-var-is-foo appears (with -var=foo)"
send: "crazy-complete-test when -var=foo --if-"
bash_expected: |
  > crazy-complete-test when -var=foo --if-
  --if-var-is-foo=  --if-var=
  > crazy-complete-test when -var=foo --if-var
fish_expected: |
  > crazy-complete-test when -var=foo --if-var
  --if-var              (Only show option if --var is given)
  --if-var-is-foo  (Only show option if --var is foo or bar)
zsh_tabs: 2
zsh_expected: |
  > crazy-complete-test when -var=foo --if-var
  --if-var         -- Only show option if --var is given
  --if-var-is-foo  -- Only show option if --var is foo or bar
---
number: 38
definition_file: "main"
description: "when: Check if --if-var and --if-var-is-foo appears (with --var bar)"
send: "crazy-complete-test when --var bar --if-"
bash_expected: |
  > crazy-complete-test when --var bar --if-
  --if-var-is-foo=  --if-var=
  > crazy-complete-test when --var bar --if-var
fish_expected: |
  > crazy-complete-test when --var bar --if-var
  --if-var              (Only show option if --var is given)
  --if-var-is-foo  (Only show option if --var is foo or bar)
zsh_tabs: 2
zsh_expected: |
  > crazy-complete-test when --var bar --if-var
  --if-var         -- Only show option if --var is given
  --if-var-is-foo  -- Only show option if --var is foo or bar
---
number: 39
definition_file: "main"
description: "when: Check if --if-optional appears (with -O)"
send: "crazy-complete-test when -O --if-"
bash_expected: |
  > crazy-complete-test when -O --if-optional=
fish_expected: |
  > crazy-complete-test when -O --if-optional
zsh_expected: |
  > crazy-complete-test when -O --if-optional=
---
number: 40
definition_file: "main"
description: "when: Check if --if-optional appears (with --optional)"
send: "crazy-complete-test when --optional --if-"
bash_expected: |
  > crazy-complete-test when --optional --if-optional=
fish_expected: |
  > crazy-complete-test when --optional --if-optional
zsh_expected: |
  > crazy-complete-test when --optional --if-optional=
---
number: 41
definition_file: "main"
description: "when: Check if --if-optional appears (with -optional)"
send: "crazy-complete-test when -optional --if-"
bash_expected: |
  > crazy-complete-test when -optional --if-optional=
fish_expected: |
  > crazy-complete-test when -optional --if-optional
zsh_expected: |
  > crazy-complete-test when -optional --if-optional=
---
number: 42
definition_file: "main"
description: "when: Check if --if-optional and --if-optional-is-foo appears (with -Ofoo)"
send: "crazy-complete-test when -Ofoo --if-"
bash_expected: |
  > crazy-complete-test when -Ofoo --if-
  --if-optional-is-foo=  --if-optional=
  > crazy-complete-test when -Ofoo --if-optional
fish_expected: |
  > crazy-complete-test when -Ofoo --if-optional
  …-optional       (Only show option if --optional is given)
  …-optional-is-foo  (Only show option if --optional is foo)
zsh_tabs: 2
zsh_expected: |
  > crazy-complete-test when -Ofoo --if-optional
  --if-optional         -- Only show option if --optional is given
  --if-optional-is-foo  -- Only show option if --optional is foo
---
number: 43
definition_file: "main"
description: "when: Check if --if-optional and --if-optional-is-foo appears (with --optional=foo)"
send: "crazy-complete-test when --optional=foo --if-"
bash_expected: |
  > crazy-complete-test when --optional=foo --if-
  --if-optional-is-foo=  --if-optional=
  > crazy-complete-test when --optional=foo --if-optional
fish_expected: |
  > crazy-complete-test when --optional=foo --if-optional
  …-optional       (Only show option if --optional is given)
  …-optional-is-foo  (Only show option if --optional is foo)
zsh_tabs: 2
zsh_expected: |
  > crazy-complete-test when --optional=foo --if-optional
  --if-optional         -- Only show option if --optional is given
  --if-optional-is-foo  -- Only show option if --optional is foo
---
number: 44
definition_file: "main"
description: "when: Check if --if-optional and --if-optional-is-foo appears (with -optional=foo)"
send: "crazy-complete-test when -optional=foo --if-"
bash_expected: |
  > crazy-complete-test when -optional=foo --if-
  --if-optional-is-foo=  --if-optional=
  > crazy-complete-test when -optional=foo --if-optional
fish_expected: |
  > crazy-complete-test when -optional=foo --if-optional
  …-optional       (Only show option if --optional is given)
  …-optional-is-foo  (Only show option if --optional is foo)
zsh_tabs: 2
zsh_expected: |
  > crazy-complete-test when -optional=foo --if-optional
  --if-optional         -- Only show option if --optional is given
  --if-optional-is-foo  -- Only show option if --optional is foo
---
number: 45
definition_file: "main"
description: "complete: Check --exec"
send: "crazy-complete-test complete --exec "
bash_expected: |
  > crazy-complete-test complete --exec
  Item\ 1  Item\ 2
  > crazy-complete-test complete --exec Item\
fish_expected: |
  > crazy-complete-test complete --exec Item\
  Item 1  (Description 1)  Item 2  (Description 2)
zsh_expected: |
  > crazy-complete-test complete --exec Item\
---
number: 46
definition_file: "main"
description: "complete: Check --exec-fast"
send: "crazy-complete-test complete --exec-fast "
bash_expected: |
  > crazy-complete-test complete --exec-fast
  Item_1  Item_2
  > crazy-complete-test complete --exec-fast Item_
fish_expected: |
  > crazy-complete-test complete --exec-fast Item_
  Item_1  (Description 1)  Item_2  (Description 2)
zsh_expected: |
  > crazy-complete-test complete --exec-fast Item_
---
number: 47
definition_file: "main"
description: "complete: Check --exec-internal"
send: "crazy-complete-test complete --exec-internal "
bash_expected: |
  > crazy-complete-test complete --exec-internal
  one    three  two
  > crazy-complete-test complete --exec-internal
fish_expected: |
  > crazy-complete-test complete --exec-internal
  one    (Execute internal code)  two  (Execute internal code)
  three  (Execute internal code)
zsh_expected: |
  > crazy-complete-test complete --exec-internal
  one    three  two
---
number: 48
definition_file: "main"
description: "complete: Check --choices"
send: "crazy-complete-test complete --choices "
bash_expected: |
  > crazy-complete-test complete --choices
  1        2        foo:bar
  > crazy-complete-test complete --choices
fish_expected: |
  > crazy-complete-test complete --choices
  1  (one)  2  (two)  foo:bar  (Description for foo:bar)
zsh_expected: |
  > crazy-complete-test complete --choices
  1        -- one
  2        -- two
  foo:bar  -- Description for foo:bar
---
number: 49
definition_file: "main"
description: "complete: Check --value-list #1"
send: "crazy-complete-test complete --value-list "
bash_expected: |
  > crazy-complete-test complete --value-list
  bar  baz  foo
  > crazy-complete-test complete --value-list
fish_expected: |
  > crazy-complete-test complete --value-list
  bar  (Complete a list)  baz  (Complete a list)  foo  (Complete a list)
zsh_expected: |
  > crazy-complete-test complete --value-list
  bar  baz  foo
---
number: 50
definition_file: "main"
description: "complete: Check --value-list #2"
send: "crazy-complete-test complete --value-list f"
bash_expected: |
  > crazy-complete-test complete --value-list foo
fish_expected: |
  > crazy-complete-test complete --value-list foo
zsh_expected: |
  > crazy-complete-test complete --value-list foo,
---
number: 51
definition_file: "main"
description: "complete: Check --value-list #3"
send: "crazy-complete-test complete --value-list foo"
bash_expected: |
  > crazy-complete-test complete --value-list foo
fish_expected: |
  > crazy-complete-test complete --value-list foo
zsh_expected: |
  > crazy-complete-test complete --value-list foo,
---
number: 52
definition_file: "main"
description: "complete: Check --value-list #4"
send: "crazy-complete-test complete --value-list foo,baz,"
bash_expected: |
  > crazy-complete-test complete --value-list foo,baz,bar
fish_expected: |
  > crazy-complete-test complete --value-list foo,baz,
  foo,baz,bar  (Complete a list)  foo,baz,foo  (Complete a list)
  foo,baz,baz  (Complete a list)
zsh_expected: |
  > crazy-complete-test complete --value-list foo,baz,bar,
---
number: 53
definition_file: "main"
description: "complete: Check --value-list-2"
send: "crazy-complete-test complete --value-list-2 "
bash_expected: |
  > crazy-complete-test complete --value-list-2
  bar  foo
  > crazy-complete-test complete --value-list-2
fish_expected: |
  > crazy-complete-test complete --value-list-2
  bar  (Some bar)  foo  (Some foo)
zsh_expected: |
  > crazy-complete-test complete --value-list-2
  bar  -- Some bar
  foo  -- Some foo
---
number: 54
definition_file: "main"
description: "complete: Check --range-1"
send: "crazy-complete-test complete --range-1 "
bash_expected: |
  > crazy-complete-test complete --range-1
  1  2  3  4  5  6  7  8  9
  > crazy-complete-test complete --range-1
fish_expected: |
  > crazy-complete-test complete --range-1
  1  (Complete a range)  4  (Complete a range)  7  (Complete a range)
  2  (Complete a range)  5  (Complete a range)  8  (Complete a range)
  3  (Complete a range)  6  (Complete a range)  9  (Complete a range)
zsh_expected: |
  > crazy-complete-test complete --range-1
  1  2  3  4  5  6  7  8  9
---
number: 55
definition_file: "main"
description: "complete: Check --range-2"
send: "crazy-complete-test complete --range-2 "
bash_expected: |
  > crazy-complete-test complete --range-2
  1  3  5  7  9
  > crazy-complete-test complete --range-2
fish_expected: |
  > crazy-complete-test complete --range-2
  1  (Complete a range)  5  (Complete a range)  9  (Complete a range)
  3  (Complete a range)  7  (Complete a range)
zsh_expected: |
  > crazy-complete-test complete --range-2
  1  3  5  7  9
---
number: 56
definition_file: "main"
description: "Check if positionals are working (1st positional)"
send: "crazy-complete-test test "
bash_expected: |
  > crazy-complete-test test
  first1  first2  first3
  > crazy-complete-test test first
fish_expected: |
  > crazy-complete-test test first
  first1  (First positional)  first3  (First positional)
  first2  (First positional)
zsh_expected: |
  > crazy-complete-test test first
---
number: 57
definition_file: "main"
description: "Check if positionals are working (2nd positional)"
send: "crazy-complete-test test first1 "
bash_expected: |
  > crazy-complete-test test first1
  second1  second2
  > crazy-complete-test test first1 second
fish_expected: |
  > crazy-complete-test test first1 second
  second1  (Second positional)  second2  (Second positional)
zsh_expected: |
  > crazy-complete-test test first1 second
---
number: 58
definition_file: "main"
description: "Check if positionals are working (3rd positional)"
send: "crazy-complete-test test first1 second1 "
bash_expected: |
  > crazy-complete-test test first1 second1
  repeated1  repeated2
  > crazy-complete-test test first1 second1 repeated
fish_expected: |
  > crazy-complete-test test first1 second1 repeated
  repeated1  (Repeated positional)  repeated2  (Repeated positional)
zsh_expected: |
  > crazy-complete-test test first1 second1 repeated
---
number: 59
definition_file: "main"
description: "Check if positionals are working (repeated positional)"
send: "crazy-complete-test test first1 second1 repeated1 "
bash_expected: |
  > crazy-complete-test test first1 second1 repeated1
  repeated1  repeated2
  > crazy-complete-test test first1 second1 repeated1 repeated
fish_expected: |
  > crazy-complete-test test first1 second1 repeated1 repeated
  repeated1  (Repeated positional)  repeated2  (Repeated positional)
zsh_expected: |
  > crazy-complete-test test first1 second1 repeated1 repeated
---
number: 60
definition_file: "main"
description: "Check if aliases are working (alias1)"
send: "crazy-complete-test alias1 --arg "
bash_expected: |
  > crazy-complete-test alias1 --arg
  1  2  3
  > crazy-complete-test alias1 --arg
fish_expected: |
  > crazy-complete-test alias1 --arg
  1  (Option with arg)  2  (Option with arg)  3  (Option with arg)
zsh_expected: |
  > crazy-complete-test alias1 --arg
  1  2  3
---
number: 61
definition_file: "main"
description: "Check if aliases are working (alias2)"
send: "crazy-complete-test alias2 --arg "
bash_expected: |
  > crazy-complete-test alias2 --arg
  1  2  3
  > crazy-complete-test alias2 --arg
fish_expected: |
  > crazy-complete-test alias2 --arg
  1  (Option with arg)  2  (Option with arg)  3  (Option with arg)
zsh_expected: |
  > crazy-complete-test alias2 --arg
  1  2  3
---
number: 62
definition_file: "when"
description: "Check --complete with --files"
send: "crazy-complete-test --files --complete "
bash_expected: |
  > crazy-complete-test --files --complete
  file1  file2  file3
  > crazy-complete-test --files --complete file
fish_expected: |
  > crazy-complete-test --files --complete file
  file1  file2  file3
zsh_expected: |
  > crazy-complete-test --files --complete file
---
number: 63
definition_file: "when"
description: "Check --complete with --directories"
send: "crazy-complete-test --directories --complete "
bash_expected: |
  > crazy-complete-test --directories --complete
  dir1  dir2  dir3
  > crazy-complete-test --directories --complete dir
fish_expected: |
  > crazy-complete-test --directories --complete dir
  dir1  dir2  dir3
zsh_expected: |
  > crazy-complete-test --directories --complete dir
---
number: 64
definition_file: "when"
description: "Check positional with --files"
send: "crazy-complete-test --files "
bash_expected: |
  > crazy-complete-test --files
  file1  file2  file3
  > crazy-complete-test --files file
fish_expected: |
  > crazy-complete-test --files file
  file1  file2  file3
zsh_expected: |
  > crazy-complete-test --files file
---
number: 65
definition_file: "when"
description: "Check positional with --directories"
send: "crazy-complete-test --directories "
bash_expected: |
  > crazy-complete-test --directories
  dir1  dir2  dir3
  > crazy-complete-test --directories dir
fish_expected: |
  > crazy-complete-test --directories dir
  dir1  dir2  dir3
zsh_expected: |
  > crazy-complete-test --directories dir
---
number: 66
definition_file: "groups"
description: "Check -A"
send: "crazy-complete-test -A -"
bash_expected: |
  > crazy-complete-test -A -C
fish_expected: |
  > crazy-complete-test -A -C
zsh_expected: |
  > crazy-complete-test -A -C
---
number: 67
definition_file: "groups"
description: "Check -B"
send: "crazy-complete-test -B -"
bash_expected: |
  > crazy-complete-test -B -
fish_expected: |
  > crazy-complete-test -B -
zsh_expected: |
  > crazy-complete-test -B -
---
number: 68
definition_file: "groups"
description: "Check -C"
send: "crazy-complete-test -C -"
bash_expected: |
  > crazy-complete-test -C -A
fish_expected: |
  > crazy-complete-test -C -A
zsh_expected: |
  > crazy-complete-test -C -A
---
number: 69
definition_file: "combine"
description: "Check combine"
send: "crazy-complete-test -o "
bash_expected: |
  > crazy-complete-test -o
  0  1  2  3  4  5  6  7
  > crazy-complete-test -o
fish_expected: |
  > crazy-complete-test -o
  0  2  4  6    (six)
  1  3  5  7  (seven)
zsh_expected: |
  > crazy-complete-test -o
  6  -- six
  7  -- seven
  0                  1                  4                  5
  3  2  --
---
number: 70
definition_file: "inherit-off"
description: "Check if options are not inherited"
send: "crazy-complete-test subcommand --"
bash_expected: |
  > crazy-complete-test subcommand --sub-bar=
fish_expected: |
  > crazy-complete-test subcommand --sub-bar
zsh_expected: |
  > crazy-complete-test subcommand --sub-bar=
---
number: 71
definition_file: "inherit-off"
description: "Check if options are not inherited (2)"
send: "crazy-complete-test subcommand --option lastcommand --"
bash_expected: |
  > crazy-complete-test subcommand --option lastcommand --last-option=
fish_expected: |
  > crazy-complete-test subcommand --option lastcommand --sub-bar
zsh_expected: |
  > crazy-complete-test subcommand --option lastcommand --sub-bar=
---
number: 72
definition_file: "inherit-on"
description: "Check if options are inherited"
send: "crazy-complete-test subcommand --"
bash_expected: |
  > crazy-complete-test subcommand --
  --option=   --sub-bar=
  > crazy-complete-test subcommand --
fish_expected: |
  > crazy-complete-test subcommand --option
  --option  --sub-bar
zsh_expected: |
  > crazy-complete-test subcommand --
  --option   --sub-bar
---
number: 73
definition_file: "inherit-on"
description: "Check if options are inherited (2)"
send: "crazy-complete-test subcommand --option lastcommand --"
bash_expected: |
  > crazy-complete-test subcommand --option lastcommand --
  --option=   --sub-bar=
  > crazy-complete-test subcommand --option lastcommand --
fish_expected: |
  > crazy-complete-test subcommand --option lastcommand --option
  --option  --sub-bar
zsh_expected: |
  > crazy-complete-test subcommand --option lastcommand --
  --option   --sub-bar